/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as SettingsImport } from './routes/settings'
import { Route as IndexImport } from './routes/index'
import { Route as SettingsIndexImport } from './routes/settings/index'
import { Route as LocationsIndexImport } from './routes/locations/index'
import { Route as EditorIndexImport } from './routes/editor/index'
import { Route as SettingsNotificationsImport } from './routes/settings/notifications'
import { Route as SettingsAppearanceImport } from './routes/settings/appearance'

// Create/Update Routes

const SettingsRoute = SettingsImport.update({
  path: '/settings',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const SettingsIndexRoute = SettingsIndexImport.update({
  path: '/',
  getParentRoute: () => SettingsRoute,
} as any)

const LocationsIndexRoute = LocationsIndexImport.update({
  path: '/locations/',
  getParentRoute: () => rootRoute,
} as any)

const EditorIndexRoute = EditorIndexImport.update({
  path: '/editor/',
  getParentRoute: () => rootRoute,
} as any)

const SettingsNotificationsRoute = SettingsNotificationsImport.update({
  path: '/notifications',
  getParentRoute: () => SettingsRoute,
} as any)

const SettingsAppearanceRoute = SettingsAppearanceImport.update({
  path: '/appearance',
  getParentRoute: () => SettingsRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/settings': {
      preLoaderRoute: typeof SettingsImport
      parentRoute: typeof rootRoute
    }
    '/settings/appearance': {
      preLoaderRoute: typeof SettingsAppearanceImport
      parentRoute: typeof SettingsImport
    }
    '/settings/notifications': {
      preLoaderRoute: typeof SettingsNotificationsImport
      parentRoute: typeof SettingsImport
    }
    '/editor/': {
      preLoaderRoute: typeof EditorIndexImport
      parentRoute: typeof rootRoute
    }
    '/locations/': {
      preLoaderRoute: typeof LocationsIndexImport
      parentRoute: typeof rootRoute
    }
    '/settings/': {
      preLoaderRoute: typeof SettingsIndexImport
      parentRoute: typeof SettingsImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  IndexRoute,
  SettingsRoute.addChildren([
    SettingsAppearanceRoute,
    SettingsNotificationsRoute,
    SettingsIndexRoute,
  ]),
  EditorIndexRoute,
  LocationsIndexRoute,
])

/* prettier-ignore-end */
